# This file was automatically generated by pywxrc.
# -*- coding: UTF-8 -*-

import wx
import wx.xrc as xrc

__res = None

def get_resources():
    """ This function provides access to the XML resources in this module."""
    global __res
    if __res == None:
        __init_resources()
    return __res




class xrcmainframe(wx.Frame):
#!XRCED:begin-block:xrcmainframe.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcmainframe.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PreFrame()
        self.PreCreate(pre)
        get_resources().LoadOnFrame(pre, parent, "mainframe")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.ctlStatus = xrc.XRCCTRL(self, "ctlStatus")
        self.ctlInstanceId = xrc.XRCCTRL(self, "ctlInstanceId")
        self.ctlSpotId = xrc.XRCCTRL(self, "ctlSpotId")
        self.ctlPublicIP = xrc.XRCCTRL(self, "ctlPublicIP")
        self.ctlPassword = xrc.XRCCTRL(self, "ctlPassword")

        self.Bind(wx.EVT_MENU, self.OnMenu_wxID_EXIT, id=wx.ID_EXIT)
        self.Bind(wx.EVT_MENU, self.OnMenu_itmSettings, id=xrc.XRCID('itmSettings'))
        self.Bind(wx.EVT_MENU, self.OnMenu_itmRefresh, id=xrc.XRCID('itmRefresh'))
        self.Bind(wx.EVT_BUTTON, self.OnButton_btnStart, id=xrc.XRCID('btnStart'))
        self.Bind(wx.EVT_BUTTON, self.OnButton_btnStop, id=xrc.XRCID('btnStop'))
        self.Bind(wx.EVT_BUTTON, self.OnButton_btnRDP, id=xrc.XRCID('btnRDP'))
        self.Bind(wx.EVT_BUTTON, self.OnButton_btnDCV, id=xrc.XRCID('btnDCV'))

#!XRCED:begin-block:xrcmainframe.OnMenu_wxID_EXIT
    def OnMenu_wxID_EXIT(self, evt):
        # Replace with event handler code
        print "OnMenu_wxID_EXIT()"
#!XRCED:end-block:xrcmainframe.OnMenu_wxID_EXIT        

#!XRCED:begin-block:xrcmainframe.OnMenu_itmSettings
    def OnMenu_itmSettings(self, evt):
        # Replace with event handler code
        print "OnMenu_itmSettings()"
#!XRCED:end-block:xrcmainframe.OnMenu_itmSettings        

#!XRCED:begin-block:xrcmainframe.OnMenu_itmRefresh
    def OnMenu_itmRefresh(self, evt):
        # Replace with event handler code
        print "OnMenu_itmRefresh()"
#!XRCED:end-block:xrcmainframe.OnMenu_itmRefresh        

#!XRCED:begin-block:xrcmainframe.OnButton_btnStart
    def OnButton_btnStart(self, evt):
        # Replace with event handler code
        print "OnButton_btnStart()"
#!XRCED:end-block:xrcmainframe.OnButton_btnStart        

#!XRCED:begin-block:xrcmainframe.OnButton_btnStop
    def OnButton_btnStop(self, evt):
        # Replace with event handler code
        print "OnButton_btnStop()"
#!XRCED:end-block:xrcmainframe.OnButton_btnStop        

#!XRCED:begin-block:xrcmainframe.OnButton_btnRDP
    def OnButton_btnRDP(self, evt):
        # Replace with event handler code
        print "OnButton_btnRDP()"
#!XRCED:end-block:xrcmainframe.OnButton_btnRDP        

#!XRCED:begin-block:xrcmainframe.OnButton_btnDCV
    def OnButton_btnDCV(self, evt):
        # Replace with event handler code
        print "OnButton_btnDCV()"
#!XRCED:end-block:xrcmainframe.OnButton_btnDCV        


class xrcdlgSettings(wx.Dialog):
#!XRCED:begin-block:xrcdlgSettings.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcdlgSettings.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PreDialog()
        self.PreCreate(pre)
        get_resources().LoadOnDialog(pre, parent, "dlgSettings")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.ctlRegion = xrc.XRCCTRL(self, "ctlRegion")
        self.ctlAccessKey = xrc.XRCCTRL(self, "ctlAccessKey")
        self.ctlSecret = xrc.XRCCTRL(self, "ctlSecret")
        self.ctlLaunchTemplate = xrc.XRCCTRL(self, "ctlLaunchTemplate")
        self.ctlKeyFileURI = xrc.XRCCTRL(self, "ctlKeyFileURI")
        self.radioOSSLFile = xrc.XRCCTRL(self, "radioOSSLFile")
        self.radioOSSLPKCS11 = xrc.XRCCTRL(self, "radioOSSLPKCS11")
        self.radioGPGSCD = xrc.XRCCTRL(self, "radioGPGSCD")

        self.Bind(wx.EVT_BUTTON, self.OnButton_wxID_OK, id=xrc.XRCID('wxID_OK'))
        self.Bind(wx.EVT_BUTTON, self.OnButton_wxID_CANCEL, id=xrc.XRCID('wxID_CANCEL'))
        self.Bind(wx.EVT_BUTTON, self.OnButton_wxID_APPLY, id=xrc.XRCID('wxID_APPLY'))
        self.Bind(wx.EVT_INIT_DIALOG, self.OnInit_dialog)

#!XRCED:begin-block:xrcdlgSettings.OnButton_wxID_OK
    def OnButton_wxID_OK(self, evt):
        # Replace with event handler code
        print "OnButton_wxID_OK()"
#!XRCED:end-block:xrcdlgSettings.OnButton_wxID_OK        

#!XRCED:begin-block:xrcdlgSettings.OnButton_wxID_CANCEL
    def OnButton_wxID_CANCEL(self, evt):
        # Replace with event handler code
        print "OnButton_wxID_CANCEL()"
#!XRCED:end-block:xrcdlgSettings.OnButton_wxID_CANCEL        

#!XRCED:begin-block:xrcdlgSettings.OnButton_wxID_APPLY
    def OnButton_wxID_APPLY(self, evt):
        # Replace with event handler code
        print "OnButton_wxID_APPLY()"
#!XRCED:end-block:xrcdlgSettings.OnButton_wxID_APPLY        

#!XRCED:begin-block:xrcdlgSettings.OnInit_dialog
    def OnInit_dialog(self, evt):
        # Replace with event handler code
        print "OnInit_dialog()"
#!XRCED:end-block:xrcdlgSettings.OnInit_dialog        


class xrcdlgWait(wx.Dialog):
#!XRCED:begin-block:xrcdlgWait.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcdlgWait.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PreDialog()
        self.PreCreate(pre)
        get_resources().LoadOnDialog(pre, parent, "dlgWait")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.gauge = xrc.XRCCTRL(self, "gauge")

        self.Bind(wx.EVT_INIT_DIALOG, self.OnInit_dialog)
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        self.Bind(wx.EVT_WINDOW_DESTROY, self.OnWindow_destroy)

#!XRCED:begin-block:xrcdlgWait.OnInit_dialog
    def OnInit_dialog(self, evt):
        # Replace with event handler code
        print "OnInit_dialog()"
#!XRCED:end-block:xrcdlgWait.OnInit_dialog        

#!XRCED:begin-block:xrcdlgWait.OnClose
    def OnClose(self, evt):
        # Replace with event handler code
        print "OnClose()"
#!XRCED:end-block:xrcdlgWait.OnClose        

#!XRCED:begin-block:xrcdlgWait.OnWindow_destroy
    def OnWindow_destroy(self, evt):
        # Replace with event handler code
        print "OnWindow_destroy()"
#!XRCED:end-block:xrcdlgWait.OnWindow_destroy        


class xrcdlgSubnetPicker(wx.Dialog):
#!XRCED:begin-block:xrcdlgSubnetPicker.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.
        
        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass
        
#!XRCED:end-block:xrcdlgSubnetPicker.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PreDialog()
        self.PreCreate(pre)
        get_resources().LoadOnDialog(pre, parent, "dlgSubnetPicker")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.choiceSubnet = xrc.XRCCTRL(self, "choiceSubnet")
        self.wxID_OK = xrc.XRCCTRL(self, "wxID_OK")

        self.Bind(wx.EVT_CHOICE, self.OnChoice_choiceSubnet, self.choiceSubnet)
        self.Bind(wx.EVT_BUTTON, self.OnButton_wxID_OK, self.wxID_OK)
        self.Bind(wx.EVT_BUTTON, self.OnButton_wxID_CANCEL, id=xrc.XRCID('wxID_CANCEL'))
        self.Bind(wx.EVT_INIT_DIALOG, self.OnInit_dialog)

#!XRCED:begin-block:xrcdlgSubnetPicker.OnChoice_choiceSubnet
    def OnChoice_choiceSubnet(self, evt):
        # Replace with event handler code
        print "OnChoice_choiceSubnet()"
#!XRCED:end-block:xrcdlgSubnetPicker.OnChoice_choiceSubnet        

#!XRCED:begin-block:xrcdlgSubnetPicker.OnButton_wxID_OK
    def OnButton_wxID_OK(self, evt):
        # Replace with event handler code
        print "OnButton_wxID_OK()"
#!XRCED:end-block:xrcdlgSubnetPicker.OnButton_wxID_OK        

#!XRCED:begin-block:xrcdlgSubnetPicker.OnButton_wxID_CANCEL
    def OnButton_wxID_CANCEL(self, evt):
        # Replace with event handler code
        print "OnButton_wxID_CANCEL()"
#!XRCED:end-block:xrcdlgSubnetPicker.OnButton_wxID_CANCEL        

#!XRCED:begin-block:xrcdlgSubnetPicker.OnInit_dialog
    def OnInit_dialog(self, evt):
        # Replace with event handler code
        print "OnInit_dialog()"
#!XRCED:end-block:xrcdlgSubnetPicker.OnInit_dialog        




# ------------------------ Resource data ----------------------

def __init_resources():
    global __res
    __res = xrc.EmptyXmlResource()

    wx.FileSystem.AddHandler(wx.MemoryFSHandler())

    vgaming_xrc = '''\
<?xml version="1.0" ?><resource class="wxBoxSizer">
  <object class="wxFrame" name="mainframe">
    <object class="wxMenuBar" name="menuBar">
      <object class="wxMenu" name="mnuFile">
        <object class="wxMenuItem" name="wxID_EXIT">
          <label>E&amp;xit</label>
          <bitmap stock_id="wxART_QUIT"/>
          <XRCED>
            <events>EVT_MENU</events>
          </XRCED>
        </object>
        <label>&amp;File</label>
      </object>
      <object class="wxMenu" name="mnuEdit">
        <label>&amp;Edit</label>
        <object class="wxMenuItem" name="itmSettings">
          <label>&amp;Settings...</label>
          <bitmap stock_id="wxART_HELP_SETTINGS"/>
          <accel>Ctrl-E</accel>
          <XRCED>
            <events>EVT_MENU</events>
          </XRCED>
        </object>
      </object>
      <object class="wxMenu" name="mnuView">
        <label>&amp;View</label>
        <object class="wxMenuItem" name="itmRefresh">
          <label>&amp;Refresh</label>
          <bitmap>view_refresh_16_png</bitmap>
          <accel>F5</accel>
          <XRCED>
            <events>EVT_MENU</events>
          </XRCED>
        </object>
      </object>
    </object>
    <object class="wxBoxSizer">
      <orient>wxVERTICAL</orient>
      <object class="sizeritem">
        <object class="wxFlexGridSizer">
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Status</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlStatus">
              <style>wxTE_READONLY</style>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Instance ID</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlInstanceId">
              <style>wxTE_READONLY</style>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Spot Request ID</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlSpotId">
              <style>wxTE_READONLY</style>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Public IP</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlPublicIP">
              <style>wxTE_READONLY</style>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <cols>2</cols>
          <vgap>4</vgap>
          <hgap>2</hgap>
          <growablecols>1</growablecols>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Password</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlPassword">
              <style>wxTE_READONLY</style>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
        </object>
        <flag>wxALL|wxEXPAND|wxGROW</flag>
        <border>7</border>
      </object>
      <object class="sizeritem">
        <object class="wxBoxSizer">
          <object class="sizeritem">
            <object class="wxButton" name="btnStart">
              <label>Start</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
            <border>4</border>
          </object>
          <object class="sizeritem">
            <object class="wxButton" name="btnStop">
              <label>Stop</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
            <flag>wxLEFT</flag>
            <border>4</border>
          </object>
          <object class="sizeritem">
            <object class="wxButton" name="btnRDP">
              <label>RDP</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
            <flag>wxLEFT</flag>
            <border>4</border>
          </object>
          <object class="sizeritem">
            <object class="wxButton" name="btnDCV">
              <label>DCV</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
            <flag>wxLEFT</flag>
            <border>4</border>
          </object>
          <orient>wxHORIZONTAL</orient>
        </object>
        <flag>wxBOTTOM|wxLEFT|wxRIGHT|wxALIGN_CENTRE|wxALIGN_BOTTOM</flag>
        <border>7</border>
      </object>
    </object>
    <title>vGaming</title>
    <style>wxCLIP_CHILDREN|wxDEFAULT_DIALOG_STYLE</style>
  </object>
  <object class="wxDialog" name="dlgSettings">
    <object class="wxBoxSizer">
      <orient>wxVERTICAL</orient>
      <object class="sizeritem">
        <object class="wxFlexGridSizer">
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Region</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlRegion">
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Access key ID</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlAccessKey">
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Secret access key</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlSecret">
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Launch template ID</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlLaunchTemplate">
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
          <cols>2</cols>
          <vgap>4</vgap>
          <hgap>2</hgap>
          <growablecols>1</growablecols>
          <growablerows/>
          <object class="sizeritem">
            <object class="wxStaticText">
              <label>Key File/URI</label>
            </object>
            <flag>wxALIGN_RIGHT|wxALIGN_CENTRE_VERTICAL</flag>
          </object>
          <object class="sizeritem">
            <object class="wxTextCtrl" name="ctlKeyFileURI">
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxRIGHT|wxEXPAND</flag>
          </object>
        </object>
        <flag>wxALL|wxEXPAND|wxGROW</flag>
        <border>7</border>
      </object>
      <object class="sizeritem">
        <object class="wxStaticBoxSizer">
          <label>Password Decryption</label>
          <orient>wxHORIZONTAL</orient>
          <object class="sizeritem">
            <object class="wxRadioButton" name="radioOSSLFile">
              <label>OpenSSL &amp;File</label>
              <style>wxRB_GROUP</style>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
          </object>
          <object class="sizeritem">
            <object class="wxRadioButton" name="radioOSSLPKCS11">
              <label>OpenSSL &amp;PKCS#11</label>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
          </object>
          <object class="sizeritem">
            <object class="wxRadioButton" name="radioGPGSCD">
              <label>GnuPG &amp;SCDaemon</label>
              <XRCED>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
          </object>
        </object>
        <flag>wxBOTTOM|wxLEFT|wxRIGHT|wxEXPAND</flag>
        <border>7</border>
      </object>
      <object class="sizeritem">
        <object class="wxStdDialogButtonSizer">
          <object class="button">
            <object class="wxButton" name="wxID_OK">
              <label>&amp;OK</label>
              <default>1</default>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
          </object>
          <object class="button">
            <object class="wxButton" name="wxID_CANCEL">
              <label>&amp;Cancel</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
          </object>
          <object class="button">
            <object class="wxButton" name="wxID_APPLY">
              <label>&amp;Apply</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
          </object>
        </object>
        <flag>wxBOTTOM|wxLEFT|wxRIGHT|wxALIGN_CENTRE|wxALIGN_BOTTOM</flag>
        <border>7</border>
      </object>
    </object>
    <title>Settings</title>
    <style>wxCLIP_CHILDREN|wxDEFAULT_DIALOG_STYLE</style>
    <XRCED>
      <events>EVT_INIT_DIALOG</events>
    </XRCED>
  </object>
  <object class="wxDialog" name="dlgWait">
    <object class="wxBoxSizer">
      <orient>wxVERTICAL</orient>
      <object class="sizeritem">
        <object class="wxStaticText">
          <label>Please wait...</label>
        </object>
        <flag>wxTOP|wxLEFT|wxRIGHT|wxEXPAND</flag>
        <border>7</border>
      </object>
      <object class="sizeritem">
        <object class="wxGauge" name="gauge">
          <size>300,-1</size>
          <style>wxGA_HORIZONTAL|wxGA_SMOOTH</style>
          <XRCED>
            <assign_var>1</assign_var>
          </XRCED>
        </object>
        <flag>wxALL|wxEXPAND</flag>
        <border>7</border>
      </object>
    </object>
    <title>Please wait...</title>
    <centered>1</centered>
    <style>wxCLIP_CHILDREN|wxCAPTION|wxSTAY_ON_TOP|wxSYSTEM_MENU</style>
    <XRCED>
      <events>EVT_INIT_DIALOG|EVT_CLOSE|EVT_WINDOW_DESTROY</events>
    </XRCED>
  </object>
  <object class="wxDialog" name="dlgSubnetPicker">
    <object class="wxBoxSizer">
      <orient>wxVERTICAL</orient>
      <object class="sizeritem">
        <object class="wxStaticBoxSizer">
          <object class="sizeritem">
            <object class="wxChoice" name="choiceSubnet">
              <size>200,-1</size>
              <content>
                <item/>
              </content>
              <style>wxCB_SORT</style>
              <XRCED>
                <events>EVT_CHOICE</events>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
            <flag>wxALL|wxEXPAND</flag>
            <border>7</border>
          </object>
          <label>Subnet</label>
          <orient>wxVERTICAL</orient>
        </object>
        <flag>wxTOP|wxLEFT|wxRIGHT|wxEXPAND|wxGROW</flag>
        <border>7</border>
      </object>
      <object class="sizeritem">
        <object class="wxStdDialogButtonSizer">
          <object class="button">
            <object class="wxButton" name="wxID_OK">
              <label>&amp;OK</label>
              <default>1</default>
              <enabled>0</enabled>
              <XRCED>
                <events>EVT_BUTTON</events>
                <assign_var>1</assign_var>
              </XRCED>
            </object>
          </object>
          <object class="button">
            <object class="wxButton" name="wxID_CANCEL">
              <label>&amp;Cancel</label>
              <XRCED>
                <events>EVT_BUTTON</events>
              </XRCED>
            </object>
          </object>
        </object>
        <flag>wxBOTTOM|wxLEFT|wxRIGHT|wxEXPAND|wxALIGN_CENTRE|wxALIGN_BOTTOM</flag>
        <border>7</border>
      </object>
    </object>
    <title>Select a subnet</title>
    <centered>1</centered>
    <style>wxCLIP_CHILDREN|wxDEFAULT_DIALOG_STYLE</style>
    <XRCED>
      <events>EVT_INIT_DIALOG</events>
    </XRCED>
  </object>
</resource>'''

    view_refresh_16_png = '''\
\x89PNG\x0d
\x1a
\x00\x00\x00\x0dIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\
\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\x00\
\x19tEXtSoftware\x00www.inkscape.org\x9b\xee<\x1a\x00\x00\x03"IDAT8\x8d\
mRMlTe\x14=\xf7{\xef\x95\xf9\xad3m\x07[\xa8\xb6
\x86\x12\xa6\xa1\xa23\x8d\xd1\x98F7\xc4`X\xa8\xbcD\x8c\x90\x81\xf0\xb3\
a\x07\x1b\x0cM\x0c\x11ta\xa2\xe0\x03\xa31L%\x984\x017\xfc\x04!\x92\xd4\xc2\
\xabq\xd1\xd0\x92\xd4\xd2\xc6\x01F;\xb4\x1d\xe8\xcc\xb4\xf3\xde\xfb\xbe\
\xeb\xa2\xf3\x92Yp\x92\x9b\xdc\xc5=\x27\x27\xe7\\bf\xf8He\xb2\xcf4\xe8\xda\
\x11\x10\xde\xf4\xa4j\xd5\x84\x98\x27\xc2\xb8\xe3\xca\x13\x00.\xd8\x96\xe9\
\xd6\xdd\x1e\x04p\x82|\x81t&\xbbE\xd3\xc4@O\xd7*}]g\xb3\xd1\xd6\x14\x01\
\x98Q(V02v\xbf|g\xfa\xa1\x27\x15\xef\xb6-\xf3lzW6\xc3\x8c\xef\x00\xc4\x88\
\x99\x91\xcad\xd7\x1b\xba\x18\xd9\xda\xd7\x1d\x8a\xc7\x82\xd0\x89\xd0\x1c\
\x0d \x1c\xd0\x11\x0d\x19\x08\x1a\x023\xc5E\x1c\xcf\x0eW
\xc5\x8a\x1d\x0d5\xf4>.W\x0df4\x113\xe3\xd5=gO\xf5\xack\xfb4\x180\xc4\xad\
\xd1\x1c\xaa\xae\x07C\xd7\xe4\x9a\xd5\xb1\xc5\xbe\xf4\xf3\xe1\xde\xf5\xad\
\xa4\x09\x82\x10\x84_\xaeM\xa8\xb7^l\x17\x07\xbe\xbe\xea8\xael\xd1\x01\x80\
\x99?\xbc3]\x10\xae\xa7X1/2\xe33\xc7\x95g\xc6\xa7g\x93\x13\xf7\xe6\x8f^\
\xefh\xee\xda\xb7uS(\x11\x0b\xe1\xe3w\xbbD-\x06\x02\xa0\x04\x00H\xa9\xc2\
U\xc7\xf3\x92/<\xfb\x83\x94\xea\x11\x80A\xdb2\xf3\xb6e^\xf9\xe3\xdb\x8f\
^\x1a\x9d,\xec\xdd}\xec\x12\xee?,az\xa6\x0c\xa9\x18\x00\x03\x00\x0b,\xaf\
\xaa\xe9\xa9Hc$\xf0Ug\xfb\xcan\x00Sui\xeb\xba&vn{\x27\xe9v>\x1dE\xa2q\x05\
4A\xbe\x03\xd6kw\xf1_?\xdf\xbc\x80\x27\xe3\xb4\x27\xd5k\x17\x87\x27\xab\
W\xed\xa9%\xdf\xbc\xe3\xaa\x00\x00\xf6[\xa8\x020j\x04\xae\x9b\xdf\x00\xec\
\x04\xe0>AX\xb7-\xf3\x9e/\xe0\x9d?\xfa\xbe\x06\x10\x98\x19\x17\xed\xd4\
\xa9\xf3\xe5\xa4T=\xb6e\x16\xebY\x87\xb3c\xabJ\xe5\xa5\x8e\xdfG\xc6o\x00\
\x88\xe9\x00@\x04\x10\x11\xee\xfeW\x86!\x18\x27\x07\xff$\x00_\xd4\x93S\x99\
l\x98\x88\xee\xf6n\\{&?3\x97\x02\xa0\x01\xa8
\x00\x10D\x04\x00\x1d\x89\x10V\xb7\x84\xf1\xe5\xfe\xb7\xa9\xad%r\xec\x95\
=?\xdfJe\xb2\xe9\x9a\xc6\xf6\x15\x86\xae\xe7\xf2\xb3\x07\xf2\x85\xe2\xeb\
\x9aF\xaem\x99\xaeXv@x\\qqah\x8a=\x8f\xd1\xbe2\x8a\xc3;\xde\x08}\xd0\x97\
|\xb9\xb59r-\xbdk\xc05t\xf1\x8dT2>\xf7h\x01M\x8dA\xd2\x84\x18\x04\x00\xff\
\x91\xa8\xff\xc7\xa1\xa5\x89\xdc\xdc\xe4\xa5\xe1\xc9\xce\xcc\x96M\xe1D,\
\x88\xee\xb5\x09z\xae=\x1e*\x96]\xfc;[\x82\xe3x\x14\x09\x1a8wy\xb4\xe2I\
u\x04\x00\x96\x1fI1M\xe4\xe6N\xdf<\xb9-\xf9\xa0\xb0\xf0I\xff\xf77\xe6\x8f\
\x0f\xdc,\x0d\xdf\xce#?[F\xd5\x95\x10D(\xcc\x97\xe4\xb9\xcb\xa3\x8bR\xa9\
\x8cm\x99c\x00\xe0\xb7\xf0\x13\x80\xed\xb6er-0\x03\xc0{\x0d\x86\xb6W1o\x90\
R\xc5\x0d]\x9b!\xc2P\xd5\x91\x87l\xcb\xfc\xdb\x0f\xf7.Uvj\x13e\xcc\xc6\
\x00\x00\x00\x00IEND\xaeB`\x82'''

    wx.MemoryFSHandler.AddFile('XRC/vgaming/vgaming_xrc', vgaming_xrc)
    wx.MemoryFSHandler.AddFile('XRC/vgaming/view_refresh_16_png', view_refresh_16_png)
    __res.Load('memory:XRC/vgaming/vgaming_xrc')


# ----------------------- Gettext strings ---------------------

def __gettext_strings():
    # This is a dummy function that lists all the strings that are used in
    # the XRC file in the _("a string") format to be recognized by GNU
    # gettext utilities (specificaly the xgettext utility) and the
    # mki18n.py script.  For more information see:
    # http://wiki.wxpython.org/index.cgi/Internationalization 
    
    def _(str): pass
    
    _("E&xit")
    _("&File")
    _("&Edit")
    _("&Settings...")
    _("&View")
    _("&Refresh")
    _("Status")
    _("Instance ID")
    _("Spot Request ID")
    _("Public IP")
    _("Password")
    _("Start")
    _("Stop")
    _("RDP")
    _("DCV")
    _("vGaming")
    _("Region")
    _("Access key ID")
    _("Secret access key")
    _("Launch template ID")
    _("Key File/URI")
    _("Password Decryption")
    _("OpenSSL &File")
    _("OpenSSL &PKCS#11")
    _("GnuPG &SCDaemon")
    _("&OK")
    _("&Cancel")
    _("&Apply")
    _("Settings")
    _("Please wait...")
    _("Please wait...")
    _("Subnet")
    _("&OK")
    _("&Cancel")
    _("Select a subnet")

